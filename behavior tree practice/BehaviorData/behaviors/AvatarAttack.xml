<?xml version="1.0" encoding="utf-8"?>
<Behavior>
  <Node Class="Behaviac.Design.Nodes.Behavior" AgentType="AvatarAttacker" Enable="true" HasOwnPrefabData="false" Id="-1" PrefabName="" PrefabNodeId="-1" Version="1">
    <Comment Background="NoColor" Text="" />
    <DescriptorRefs value="0:" />
    <Connector Identifier="GenericChildren">
      <Node Class="PluginBehaviac.Nodes.DecoratorLoop" Count="const int -1" DecorateWhenChildEnds="true" Enable="true" HasOwnPrefabData="false" Id="9" PrefabName="" PrefabNodeId="-1" Version="1">
        <Comment Background="NoColor" Text="" />
        <Connector Identifier="GenericChildren">
          <Node Class="PluginBehaviac.Nodes.Selector" Enable="true" HasOwnPrefabData="false" Id="0" PrefabName="" PrefabNodeId="-1" Version="1">
            <Comment Background="NoColor" Text="" />
            <Connector Identifier="GenericChildren">
              <Node Class="PluginBehaviac.Nodes.Condition" Enable="true" HasOwnPrefabData="false" Id="3" Operator="Equal" Opl="Player::State Self.Player::state" Opr="const Player::State Hited" PrefabName="" PrefabNodeId="-1" Version="1">
                <Comment Background="NoColor" Text="" />
              </Node>
              <Node Class="PluginBehaviac.Nodes.DecoratorNot" DecorateWhenChildEnds="false" Enable="true" HasOwnPrefabData="false" Id="10" PrefabName="" PrefabNodeId="-1" Version="1">
                <Comment Background="NoColor" Text="" />
                <Connector Identifier="GenericChildren">
                  <Node Class="PluginBehaviac.Nodes.Action" Enable="true" HasOwnPrefabData="false" Id="7" Method="Self.Player::rotateToTarget()" PreconditionFailResult="BT_FAILURE" PrefabName="" PrefabNodeId="-1" ResultFunctor="&quot;&quot;" ResultOption="BT_INVALID" Version="1">
                    <Comment Background="NoColor" Text="" />
                  </Node>
                </Connector>
              </Node>
              <Node Class="PluginBehaviac.Nodes.Sequence" Enable="true" HasOwnPrefabData="false" Id="1" PrefabName="" PrefabNodeId="-1" Version="1">
                <Comment Background="NoColor" Text="" />
                <Connector Identifier="GenericChildren">
                  <Node Class="PluginBehaviac.Nodes.Condition" Enable="true" HasOwnPrefabData="false" Id="6" Operator="Equal" Opl="Self.Player::isEnemyInRange()" Opr="const bool true" PrefabName="" PrefabNodeId="-1" Version="1">
                    <Comment Background="Gray" Text="Not in attack range, interrupt attack tree" />
                  </Node>
                  <Node Class="PluginBehaviac.Nodes.Selector" Enable="true" HasOwnPrefabData="false" Id="2" PrefabName="" PrefabNodeId="-1" Version="1">
                    <Comment Background="Gray" Text="In attack range -&gt; Attack" />
                    <Connector Identifier="GenericChildren">
                      <Node Class="PluginBehaviac.Nodes.Action" Enable="true" HasOwnPrefabData="false" Id="4" Method="Self.AvatarAttacker::avatarAttack()" PreconditionFailResult="BT_FAILURE" PrefabName="" PrefabNodeId="-1" ResultFunctor="&quot;&quot;" ResultOption="BT_INVALID" Version="1">
                        <Comment Background="Gray" Text="Avatar skill" />
                      </Node>
                      <Node Class="PluginBehaviac.Nodes.Action" Enable="true" HasOwnPrefabData="false" Id="5" Method="Self.Player::attack()" PreconditionFailResult="BT_FAILURE" PrefabName="" PrefabNodeId="-1" ResultFunctor="&quot;&quot;" ResultOption="BT_INVALID" Version="1">
                        <Comment Background="Gray" Text="normal" />
                      </Node>
                    </Connector>
                  </Node>
                </Connector>
              </Node>
              <Node Class="PluginBehaviac.Nodes.Action" Enable="true" HasOwnPrefabData="false" Id="8" Method="Self.Player::moveToTarget()" PreconditionFailResult="BT_FAILURE" PrefabName="" PrefabNodeId="-1" ResultFunctor="&quot;&quot;" ResultOption="BT_INVALID" Version="1">
                <Comment Background="Gray" Text="Move to target" />
              </Node>
            </Connector>
          </Node>
        </Connector>
      </Node>
    </Connector>
  </Node>
</Behavior>